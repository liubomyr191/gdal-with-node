language: cpp

compiler:
  - gcc

os:
  - linux
  - osx

env:
  matrix:
    - NODE_NVM_VERSION="0.10" TARGET=STATIC
    - NODE_NVM_VERSION="0.10" TARGET=SHARED
    - NODE_NVM_VERSION="0.8" TARGET=SHARED
  global:
    - secure: fA75GkGowk342k8WjZpVQkcUXdLKRLVcu+U2paoTOmkh+6yINtFyZEppTQHjSb7dvQg+qk1MXz/2q7fVRMvYjDFNJmtZhLn6g0hPeTROm97HdS6bP15iFJ3KbNmTbZ++7alFJn7/GQu+dNm5wPNu7N2thLOWEQOR3qgcKvsiOTw=
    - secure: cctaCGyRabvyBWUnlFhoP4JfgoaTmRHTkCYw0PfIIZ4vCGcQiTT7uoYA5QjOTD0mzGWdo3N7MksAiratkWzxCwRHVzpCJnpWco2sREeJ3m5QgxXxWLtxZtcOuIv3QaGKE7p9wMYITxS79RSIlEEfVW35qPjYAyL536e4ek+4cM0=

before_install:
  - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
  - PUBLISH_BINARY=false
  - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;
  - git clone https://github.com/creationix/nvm.git ../.nvm && source ../.nvm/nvm.sh
  - nvm install $NODE_NVM_VERSION
  - nvm use $NODE_NVM_VERSION
  - node --version
  - npm --version

install:
  - if [[ ${TARGET} == 'SHARED' ]] && [[ "$(uname -s)" == 'Linux' ]]; then sudo apt-get -qq update; sudo apt-get --force-yes install libgdal-dev libgdal1-dev; fi;
  - if [[ ${TARGET} == 'SHARED' ]] && [[ "$(uname -s)" == 'Darwin' ]]; then brew install gdal; fi;
  - if [[ ${TARGET} == 'SHARED' ]]; then npm install --build-from-source --shared_gdal; fi;
  - if [[ ${TARGET} == 'STATIC' ]]; then npm install --build-from-source > /dev/null; fi;
  - npm test

script:
  - ./node_modules/.bin/node-pre-gyp package testpackage
  - npm test
  - if [[ ${TARGET} == 'STATIC' && ${PUBLISH_BINARY} == 'true' ]]; then ./node_modules/.bin/node-pre-gyp unpublish publish; rm -rf {build,lib/binding}; ./node_modules/.bin/node-pre-gyp install; npm test; fi
