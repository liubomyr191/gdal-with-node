language: cpp

compiler:
  - gcc

os:
- linux
- osx

env:
  matrix:
    - NODE_NVM_VERSION="0.10" TARGET=STATIC
    - NODE_NVM_VERSION="0.10" TARGET=SHARED
    - NODE_NVM_VERSION="0.8" TARGET=SHARED
  global:
    - secure: JknbqPRFci/F+TqK4+xtLXyiRCORO3i5QlJlj1hna9jE1QuWHitDhoN/cFSYluGq3Ul0rIgE419mal8fIzSiXCgNGMpEkg0qDDDYJhQrybc0T7QQVt7DjAY1IS/ybj/OJuTyt77rpeA0QdW6f9rYBO/nvDf27tJJhC0RpVh3m08=
    - secure: NHHQIv0bNEPYcwuo1VixLGylSH9+zDb+ioqGdllqiXA3lIOZM1pjVUQ0v/K2sl3/c9g0PJaTL77cUDqfF1j+7zCRaYUx9DYyT3XEo3qfYPkjCqsELHlkASHN5u6okKR1YC7eURkwtNmR1N55bdq7JDYDFDfaXSdr2KT+UITMsaM=

before_install:
  - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
  - PUBLISH_BINARY=false
  - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;
  - git clone https://github.com/creationix/nvm.git ../.nvm && source ../.nvm/nvm.sh
  - nvm install $NODE_NVM_VERSION
  - nvm use $NODE_NVM_VERSION
  - node --version
  - npm --version

install:
  - if [[ ${TARGET} == 'SHARED' ]] && [[ "$(uname -s)" == 'Linux' ]]; then sudo apt-get -qq update; sudo apt-get -qq install libgdal1-dev; fi;
  - if [[ ${TARGET} == 'SHARED' ]] && [[ "$(uname -s)" == 'Darwin' ]]; then brew install gdal; fi;
  - if [[ ${TARGET} == 'SHARED' ]]; then npm install --build-from-source --shared_gdal; fi;
  - if [[ ${TARGET} == 'STATIC' ]]; then npm install --build-from-source; fi;
  - npm test

script:
  - ./node_modules/.bin/node-pre-gyp package testpackage
  - npm test
  - if [[ ${TARGET} == 'STATIC' && ${PUBLISH_BINARY} == 'true' ]]; then ./node_modules/.bin/node-pre-gyp unpublish publish; rm -rf {build,lib/binding}; ./node_modules/.bin/node-pre-gyp install; npm test; fi
